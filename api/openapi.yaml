openapi: 3.0.0
info:
  title: ミエトル API
  description: 予実管理Webアプリ「ミエトル」のAPI仕様書
  version: 1.0.0
  contact:
    name: ミエトル開発チーム
    email: support@mietoru.app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.mietoru.app/v1
    description: 本番環境
  - url: https://staging-api.mietoru.app/v1
    description: ステージング環境
  - url: http://localhost:3000/v1
    description: 開発環境

security:
  - BearerAuth: []

paths:
  # 認証関連
  /auth/login:
    post:
      tags:
        - 認証
      summary: ユーザーログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /auth/logout:
    post:
      tags:
        - 認証
      summary: ユーザーログアウト
      responses:
        "200":
          $ref: "#/components/responses/Success"

  # ダッシュボード
  /dashboard/get:
    post:
      tags:
        - ダッシュボード
      summary: ダッシュボード情報取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardRequest"
      responses:
        "200":
          description: ダッシュボード情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"

  # 財務データ
  /financial/data/get:
    post:
      tags:
        - 財務データ
      summary: 財務データ取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinancialDataGetRequest"
      responses:
        "200":
          description: 財務データ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FinancialData"

  /financial/data/create:
    post:
      tags:
        - 財務データ
      summary: 財務データ登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinancialDataRequest"
      responses:
        "201":
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinancialData"

  /financial/data/update:
    post:
      tags:
        - 財務データ
      summary: 財務データ更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinancialDataUpdateRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinancialData"

  /financial/data/delete:
    post:
      tags:
        - 財務データ
      summary: 財務データ削除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinancialDataDeleteRequest"
      responses:
        "200":
          $ref: "#/components/responses/Success"

  # ロードマップ・目標
  /roadmap/targets/get:
    post:
      tags:
        - ロードマップ
      summary: 10年目標取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoadmapTargetsGetRequest"
      responses:
        "200":
          description: 目標データ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/YearlyTarget"

  /roadmap/targets/create:
    post:
      tags:
        - ロードマップ
      summary: 10年目標設定
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/YearlyTargetRequest"
      responses:
        "201":
          description: 設定成功

  /roadmap/targets/update:
    post:
      tags:
        - ロードマップ
      summary: 10年目標更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YearlyTargetUpdateRequest"
      responses:
        "200":
          description: 更新成功

  /roadmap/targets/delete:
    post:
      tags:
        - ロードマップ
      summary: 10年目標削除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YearlyTargetDeleteRequest"
      responses:
        "200":
          $ref: "#/components/responses/Success"

  # タスク管理
  /tasks/get:
    post:
      tags:
        - タスク
      summary: タスク一覧取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TasksGetRequest"
      responses:
        "200":
          description: タスク一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

  /tasks/create:
    post:
      tags:
        - タスク
      summary: タスク作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
      responses:
        "201":
          description: 作成成功

  /tasks/update:
    post:
      tags:
        - タスク
      summary: タスク更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskUpdateRequest"
      responses:
        "200":
          description: 更新成功

  /tasks/delete:
    post:
      tags:
        - タスク
      summary: タスク削除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskDeleteRequest"
      responses:
        "200":
          $ref: "#/components/responses/Success"

  # 設定画面
  /settings/profile/get:
    post:
      tags:
        - 設定
      summary: ユーザープロフィール取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileGetRequest"
      responses:
        "200":
          description: プロフィール情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"

  /settings/profile/update:
    post:
      tags:
        - 設定
      summary: ユーザープロフィール更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileUpdateRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"

  /settings/notifications/get:
    post:
      tags:
        - 設定
      summary: 通知設定取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSettingsGetRequest"
      responses:
        "200":
          description: 通知設定
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationSettings"

  /settings/notifications/update:
    post:
      tags:
        - 設定
      summary: 通知設定更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSettingsRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationSettings"

  /settings/yayoi/get:
    post:
      tags:
        - 設定
      summary: 弥生会計連携設定取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YayoiSettingsGetRequest"
      responses:
        "200":
          description: 弥生会計設定
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/YayoiSettings"

  /settings/yayoi/update:
    post:
      tags:
        - 設定
      summary: 弥生会計連携設定更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YayoiSettingsRequest"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/YayoiSettings"

  /settings/yayoi/connect:
    post:
      tags:
        - 設定
      summary: 弥生会計接続テスト
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YayoiConnectRequest"
      responses:
        "200":
          description: 接続成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/YayoiConnectionResult"
        "400":
          description: 接続失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/YayoiConnectionResult"

  /settings/yayoi/disconnect:
    post:
      tags:
        - 設定
      summary: 弥生会計連携解除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YayoiDisconnectRequest"
      responses:
        "200":
          $ref: "#/components/responses/Success"

  /settings/backup/create:
    post:
      tags:
        - 設定
      summary: データバックアップ作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupCreateRequest"
      responses:
        "200":
          description: バックアップファイル
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /settings/backup/restore:
    post:
      tags:
        - 設定
      summary: データリストア
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "#/components/responses/Success"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # 認証関連
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password

    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        user:
          $ref: "#/components/schemas/UserProfile"

    # ユーザー関連
    UserProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          example: "田中太郎"
        email:
          type: string
          format: email
        company:
          type: string
          example: "株式会社サンプル"
        phone:
          type: string

    # ダッシュボード関連
    DashboardRequest:
      type: object
      properties:
        userId:
          type: string
        dateRange:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date

    Dashboard:
      type: object
      properties:
        kpis:
          type: array
          items:
            $ref: "#/components/schemas/KPIData"
        monthlyData:
          type: array
          items:
            $ref: "#/components/schemas/MonthlyData"

    KPIData:
      type: object
      properties:
        title:
          type: string
          example: "今月の売上"
        value:
          type: string
          example: "¥2,350,000"
        change:
          type: string
          example: "+12.5%"
        status:
          type: string
          enum: [success, warning, error, info]

    MonthlyData:
      type: object
      properties:
        month:
          type: string
          example: "2024-06"
        target:
          type: number
          example: 2500000
        actual:
          type: number
          example: 2350000

    # 財務データ関連
    FinancialDataGetRequest:
      type: object
      properties:
        userId:
          type: string
        year:
          type: integer
          example: 2024
        month:
          type: integer
          example: 6

    FinancialData:
      type: object
      properties:
        id:
          type: string
        month:
          type: string
          example: "2024-06"
        year:
          type: integer
          example: 2024
        revenue:
          type: number
          example: 2350000
        profit:
          type: number
          example: 485000
        expenses:
          type: number
          example: 1865000
        customers:
          type: integer
          example: 1247

    FinancialDataRequest:
      type: object
      required:
        - month
        - year
        - revenue
        - profit
      properties:
        userId:
          type: string
        month:
          type: string
        year:
          type: integer
        revenue:
          type: number
        profit:
          type: number
        expenses:
          type: number
        customers:
          type: integer

    FinancialDataUpdateRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        userId:
          type: string
        month:
          type: string
        year:
          type: integer
        revenue:
          type: number
        profit:
          type: number
        expenses:
          type: number
        customers:
          type: integer

    FinancialDataDeleteRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        userId:
          type: string

    # ロードマップ関連
    RoadmapTargetsGetRequest:
      type: object
      properties:
        userId:
          type: string

    YearlyTarget:
      type: object
      properties:
        year:
          type: integer
          example: 1
        revenue:
          type: number
          example: 30000000
        profit:
          type: number
          example: 3000000
        employees:
          type: integer
          example: 3
        phase:
          type: string
          enum: [創業期, 成長期, 拡大期, 安定期]

    YearlyTargetRequest:
      type: object
      required:
        - year
        - revenue
        - profit
        - employees
        - phase
      properties:
        userId:
          type: string
        year:
          type: integer
        revenue:
          type: number
        profit:
          type: number
        employees:
          type: integer
        phase:
          type: string
          enum: [創業期, 成長期, 拡大期, 安定期]

    YearlyTargetUpdateRequest:
      type: object
      required:
        - year
      properties:
        userId:
          type: string
        year:
          type: integer
        revenue:
          type: number
        profit:
          type: number
        employees:
          type: integer
        phase:
          type: string
          enum: [創業期, 成長期, 拡大期, 安定期]

    YearlyTargetDeleteRequest:
      type: object
      required:
        - year
      properties:
        userId:
          type: string
        year:
          type: integer

    # タスク関連
    TasksGetRequest:
      type: object
      properties:
        userId:
          type: string

    Task:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: "月次売上の確認と入力"
        day:
          type: integer
          example: 5
        enabled:
          type: boolean

    TaskRequest:
      type: object
      required:
        - name
        - day
      properties:
        userId:
          type: string
        name:
          type: string
        day:
          type: integer
          minimum: 1
          maximum: 28
        enabled:
          type: boolean
          default: true

    TaskUpdateRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        userId:
          type: string
        name:
          type: string
        day:
          type: integer
          minimum: 1
          maximum: 28
        enabled:
          type: boolean

    TaskDeleteRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        userId:
          type: string

    # 設定関連
    UserProfileGetRequest:
      type: object
      properties:
        userId:
          type: string

    UserProfileUpdateRequest:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
          example: "田中太郎"
        company:
          type: string
          example: "株式会社サンプル"
        phone:
          type: string
          example: "090-1234-5678"

    NotificationSettingsGetRequest:
      type: object
      properties:
        userId:
          type: string

    NotificationSettings:
      type: object
      properties:
        email:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            address:
              type: string
              format: email
        sms:
          type: object
          properties:
            enabled:
              type: boolean
              default: false
            number:
              type: string
        push:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
        tasks:
          type: object
          properties:
            monthlyReminder:
              type: boolean
              default: true
            budgetAlert:
              type: boolean
              default: true
            targetAlert:
              type: boolean
              default: true

    NotificationSettingsRequest:
      type: object
      properties:
        userId:
          type: string
        email:
          type: object
          properties:
            enabled:
              type: boolean
            address:
              type: string
              format: email
        sms:
          type: object
          properties:
            enabled:
              type: boolean
            number:
              type: string
        push:
          type: object
          properties:
            enabled:
              type: boolean
        tasks:
          type: object
          properties:
            monthlyReminder:
              type: boolean
            budgetAlert:
              type: boolean
            targetAlert:
              type: boolean

    YayoiSettingsGetRequest:
      type: object
      properties:
        userId:
          type: string

    YayoiSettings:
      type: object
      properties:
        connected:
          type: boolean
          default: false
        lastSync:
          type: string
          format: date-time
          nullable: true
        settings:
          type: object
          properties:
            autoSync:
              type: boolean
              default: false
            syncInterval:
              type: string
              enum: [daily, weekly, monthly]
              default: monthly
            company:
              type: string
              example: "株式会社サンプル"
            fiscalYearStart:
              type: integer
              minimum: 1
              maximum: 12
              default: 4
              example: 4

    YayoiSettingsRequest:
      type: object
      properties:
        userId:
          type: string
        autoSync:
          type: boolean
        syncInterval:
          type: string
          enum: [daily, weekly, monthly]
        company:
          type: string
        fiscalYearStart:
          type: integer
          minimum: 1
          maximum: 12

    YayoiConnectRequest:
      type: object
      required:
        - apiKey
        - company
      properties:
        userId:
          type: string
        apiKey:
          type: string
          example: "yayoi_api_key_123456"
        company:
          type: string
          example: "株式会社サンプル"

    YayoiDisconnectRequest:
      type: object
      properties:
        userId:
          type: string

    YayoiConnectionResult:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          example: "弥生会計に正常に接続されました"
        company:
          type: string
          example: "株式会社サンプル"
        lastSync:
          type: string
          format: date-time
          nullable: true

    BackupCreateRequest:
      type: object
      properties:
        userId:
          type: string

    # 共通レスポンス
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

  responses:
    Success:
      description: 処理成功
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"

    Unauthorized:
      description: 認証エラー
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
